apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  # Template for creating nodes
  template:
    metadata:
      labels:
        provisioner: "karpenter-default"
        node-type: "karpenter-managed"
        tier: "free"
    
    spec:
      # Instance requirements - optimized for free tier
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"] # Prefer spot for cost savings on free tier
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: ["t3.micro", "t3.nano", "t2.micro"] # Free tier eligible instances
      
      # Reference to the EC2NodeClass
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1
        kind: EC2NodeClass
        name: default
      
      # Taints for nodes (optional)
      taints: []
  
  # Limits on the total number of resources this NodePool can create - free tier limits
  limits:
    cpu: 100 # Reduced for free tier
    memory: 100Gi # Reduced for free tier
  
  # Disruption settings - optimized for cost and free tier
  disruption:
    # Consolidation settings
    consolidationPolicy: WhenUnderutilized
    consolidateAfter: 15s # Faster consolidation for cost savings
    
    # Node termination grace period - shorter for free tier
    expireAfter: 168h # 7 days
