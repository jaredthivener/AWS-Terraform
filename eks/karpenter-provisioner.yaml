apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: default
spec:
  # Template for creating nodes
  template:
    metadata:
      labels:
        provisioner: "karpenter-default"
        node-type: "karpenter-managed"
    
    spec:
      # Instance requirements
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot", "on-demand"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: ["t3.micro", "t3.small", "t3.medium"]
      
      # Reference to the EC2NodeClass
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: default
      
      # Taints for nodes (optional)
      taints: []
  
  # Limits on the total number of resources this NodePool can create
  limits:
    cpu: 1000
    memory: 1000Gi
  
  # Disruption settings
  disruption:
    # Consolidation settings
    consolidationPolicy: WhenUnderutilized
    consolidateAfter: 30s
    
    # Node termination grace period
    expireAfter: 720h # 30 days
